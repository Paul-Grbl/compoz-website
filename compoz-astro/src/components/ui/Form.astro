---
import { Image } from "astro:assets";
import decorForm from "../../assets/pics/contact-pic.svg";
---

<div
  class="flex relative justify-start items-center p-10 sm:p-[60px] bg-[#F3F3F3] rounded-[45px] overflow-hidden"
>
  <form id="form" class="bg-gray sm:p-6 h-full w-full lg:max-w-lg">
    <div class="flex flex-col sm:flex-row gap-[35px] sm:items-center mb-5">
      <div class="flex items-center gap-5">
        <input
          type="checkbox"
          id="checkbox1"
          name="checkbox1"
          class="form-checkbox text-black"
        />
        <label for="checkbox1" class="text-black">Faire connaissance</label>
      </div>
      <div class="flex items-center gap-5">
        <input
          type="checkbox"
          id="checkbox2"
          name="checkbox2"
          class="form-checkbox text-black"
        />
        <label for="checkbox2" class="flex items-center text-black">
          Demander un devis
        </label>
      </div>
    </div>
    <div class="flex items-center gap-5 mb-10">
      <input
        type="checkbox"
        id="checkbox3"
        name="checkbox3"
        class="form-checkbox text-black"
      />
      <label for="checkbox3" class="flex items-center text-black">
        Prendre un café, si vous passez par Toulouse :)
      </label>
    </div>

    <div class="mb-4">
      <label for="name" class="block text-black mb-2">Nom*</label>
      <input
        type="text"
        id="name"
        name="name"
        placeholder="Nom"
        class="w-full px-[30px] py-[18px] border border-black rounded-[14px] text-black outline-none"
      />
    </div>

    <div class="mb-4">
      <span id="errorName" class="text-red-500" hidden
        >Min. 2 caractères. Caractères spéciaux interdits.</span
      >
    </div>

    <div class="mb-4">
      <label for="pseudo" class="block text-black mb-2">Pseudo*</label>
      <input
        type="text"
        id="pseudo"
        name="pseudo"
        placeholder="Pseudo"
        class="w-full px-[30px] py-[18px] border border-black rounded-[14px] text-black outline-none"
      />
    </div>

    <div class="mb-4">
      <label for="email" class="block text-black mb-2">Email*</label>
      <input
        type="email"
        id="email"
        name="email"
        placeholder="Email"
        class="w-full px-[30px] py-[18px] border border-black rounded-[14px] text-black outline-none"
      />
    </div>
    <div class="mb-4">
      <span id="errorEmail" class="text-red-500" hidden
        >Adresse email invalide</span
      >
    </div>

    <div class="mb-4">
      <label for="message" class="block text-black mb-2">Message*</label>
      <textarea
        id="message"
        name="message"
        placeholder="Message"
        class="w-full px-[30px] py-[18px] border border-black rounded-[14px] text-black outline-none min-h-[10em]"
      ></textarea>
    </div>

    <div class="mb-4">
      <span id="responseMessage" class="text-primary"></span>
    </div>

    <div
      class="g-recaptcha mb-4"
      data-sitekey="6LdYXN4qAAAAAFpUmV-lRSrNLEtd4F0c_JwVf4u1"
    >
    </div>

    <button
      id="submitBtn"
      type="submit"
      name="submit"
      class="btn-primary w-full"
      disabled
    >
      Envoyer</button
    >
  </form>
  <picture class="absolute right-[-25%] left-[60%] top-[2%] hidden lg:block">
    <Image src={decorForm} alt="decor" class="size-full" />
  </picture>
</div>
<style>
  .form-checkbox {
    appearance: none;
    width: 28px;
    min-width: 28px;
    height: 28px;
    border: 1px solid #000;
    border-radius: 50%;
    outline: none;
    cursor: pointer;
    position: relative;
  }

  .form-checkbox:before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 0;
    background: var(--green);
    transform: scale(0);
    transition: transform 0.1s ease-in-out;
  }

  .form-checkbox:checked:before {
    transform: scale(0.6);
  }
</style>
<script is:inline src="https://www.google.com/recaptcha/api.js" async defer
></script>
<script>
  function formSetup() {
    setTimeout(
      () =>
        ((document.getElementById("submitBtn") as HTMLButtonElement).disabled =
          false),
      3000,
    );

    var cb1 = document.getElementById("checkbox1") as HTMLInputElement;
    var cb2 = document.getElementById("checkbox2") as HTMLInputElement;
    var cb3 = document.getElementById("checkbox3") as HTMLInputElement;
    const form = document.getElementById("form") as HTMLFormElement;
    const name = document.getElementById("name") as HTMLInputElement;
    const email = document.getElementById("email") as HTMLInputElement;
    const msg = document.getElementById("message") as HTMLInputElement;
    const errorName = document.getElementById("errorName");
    const errorEmail = document.getElementById("errorEmail");

    if (
      cb1 &&
      cb2 &&
      cb3 &&
      form &&
      name &&
      email &&
      msg &&
      errorEmail &&
      errorName
    ) {
      cb1.checked = true;

      cb1.addEventListener("change", function () {
        if (cb1.checked) {
          cb2.checked = false;
          cb3.checked = false;
        } else {
          cb1.checked = true;
        }
      });
      cb2.addEventListener("change", function () {
        if (cb2.checked) {
          cb1.checked = false;
          cb3.checked = false;
        } else {
          cb2.checked = true;
        }
      });
      cb3.addEventListener("change", function () {
        if (cb3.checked) {
          cb1.checked = false;
          cb2.checked = false;
        } else {
          cb3.checked = true;
        }
      });

      msg.addEventListener("input", function () {
        if (msg.value.length > 1000) {
          msg.value = msg.value.substring(0, 1000);
        }
      });

      form.addEventListener("submit", async function (event) {
        event.preventDefault();

        // Input validation
        let error = false;
        const regexName = new RegExp(/^[a-zA-ZÀ-ÿ' -]{2,50}$/);
        if (!regexName.test(name.value)) {
          errorName.removeAttribute("hidden");
          error = true;
        } else {
          errorName.setAttribute("hidden", "true");
        }

        const regexEmail = /^[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        if (!regexEmail.test(email.value)) {
          errorEmail.removeAttribute("hidden");
          error = true;
        } else {
          errorEmail.setAttribute("hidden", "true");
        }

        if (error) {
          return;
        }

        const formData = new FormData(this);

        let message = formData.get("message")?.toString() ?? "";
        if (cb1.checked) {
          message = "Objet: Faire connaissance\n\n" + message;
        } else if (cb2.checked) {
          message = "Objet: Demande de devis\n\n" + message;
        } else if (cb3.checked) {
          message = "Objet: Boire un café\n\n" + message;
        }
        formData.set("message", message);

        const responseMessage = document.getElementById("responseMessage");

        try {
          const response = await fetch("https://compoz.tech/sendmail.php", {
            method: "POST",
            body: formData,
          });

          if (responseMessage && response.status === 200) {
            responseMessage.innerText = "Email envoyé avec succès.";
            responseMessage.classList.remove("text-red-500");
          } else {
            throw "Error";
          }
        } catch (error) {
          if (responseMessage) {
            responseMessage.innerText = "Erreur lors de l'envoi du message.";
            responseMessage.classList.add("text-red-500");
          }
        }
      });
    }
  }

  formSetup();
  document.addEventListener("astro:after-swap", formSetup);
</script>
